/* eslint-disable @typescript-eslint/no-var-requires */
const glob = require('fast-glob');
const { existsSync } = require('fs');
const { mkdir, writeFile } = require('fs/promises');

const metaDir = './.gg/';

async function updateRegistry() {
  if (!existsSync(metaDir)) {
    await mkdir(metaDir);
  }

  const registry = [];

  const systems = await glob('./src/**/*.system.ts');

  registry.push(...systems);

  const components = await glob('./src/**/*.component.ts');

  registry.push(...components);

  const prefabs = await glob('./src/**/*.prefab.ts');

  registry.push(...prefabs);

  const imports = registry
    .map((file) => {
      const path = String(file)
        .replace(/^\.\/src\//, '../src/')
        .replace(/\.ts$/, '');
      return `import '${path}';`;
    })
    .join('\n');

  await writeFile(
    './.gg/registry.ts',
    `/** Autogenerated at ${new Date()}, do not modify manually, just run "npm run gg:update-registry" instead */\n${imports}`,
    { encoding: 'utf8', flag: 'w' },
  );
}

updateRegistry().catch(console.error);
